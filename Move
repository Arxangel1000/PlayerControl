  private void Move(CCharacter component)
        {
            Vector3 move = Vector3.zero;

            if (_vector.sqrMagnitude > 0.5f)
            {
                float angle = Mathf.Atan2(_vector.x, _vector.y) * Mathf.Rad2Deg + _camera.CamT.eulerAngles.y;
                float smoothAngle = Mathf.SmoothDampAngle(component.transform.eulerAngles.y, angle, ref _smooth, 0.05f);
                
                component.transform.rotation = Quaternion.Euler(0f, smoothAngle, 0f);

                move = Quaternion.Euler(0f, angle, 0f) * Vector3.forward;

                Vector3 next = component.transform.position + move * component.Speed * Time.deltaTime;

                Ray ray = new Ray { origin = next, direction = Vector3.down };

                if (!Physics.Raycast(ray, 1f, Layers.Ground)) return;
            }

            move.y = component.CharacterController.isGrounded ? 0f : component.Gravity * Time.deltaTime;

            component.CharacterController.Move(move * component.Speed * Time.deltaTime);
        }
